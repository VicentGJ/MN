import sympy
from sympy import symbols, diff

#definir la funcion
x= sympy.Symbol('x')
FUNCTION= x*sympy.exp(x)-2

#verificar si el punto es valido
def valido(xo):
    x= sympy.Symbol('x')
    if FUNCTION.subs(x, xo)*df_2(xo):
        return True
    else:
        return False

def df(xo):
    x= sympy.Symbol('x')
    f= FUNCTION
    return sympy.diff(f, x).subs(x,xo)

def df_2(xo):
    x= sympy.Symbol('x')
    f= FUNCTION
    return sympy.diff(sympy.diff(f, x), x).subs(x,xo)

def newton(xo, tol, n_max):
    x= sympy.Symbol('x')
    f= FUNCTION
    print(f'It\t\t\tAproxRaiz\t\t\tError')
    i=0
    error= 10**6
    while error> tol and i<n_max:
        xn= xo-FUNCTION.subs(x, xo)/df(xo)
        error=abs(xn-xo)
        i+=1
        print(f'{i}\t\t\t{xn}\t\t{error}')
        xo=xn
    return xn

print(valido(0.7))
print(newton(0.7, 0.00000005, 5))

